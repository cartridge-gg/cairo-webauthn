// This file is script-generated.
// Don't modify it manually!
// See test_gen_scripts/auth/webauthn_test.py for details
use webauthn_auth::webauthn::verify;
use array::ArrayTrait;
use webauthn_auth::types::PublicKey;
use webauthn_auth::errors::AuthnErrorIntoFelt252;
use core::option::OptionTrait;
use core::result::ResultTrait;
use starknet::secp256r1::Secp256Trait;
use starknet::secp256r1::Secp256r1Point;

#[test]
#[available_gas(200000000000)]
fn test_base_0() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    85361148225729824017625108732123897247053575672172763810522989717862412662042, 
	    34990362585894687818855246831758567645528911684717374214517047635026995605
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 75529856265189085717597548073817449083775048352765043385708233156408636830191;
	let s: u256 = 82845566382340822813767408921328436369277471334456847186275564885436721176380;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(0);
	challenge.append(177);
	challenge.append(68);
	challenge.append(201);
	challenge.append(3);
	challenge.append(196);
	challenge.append(217);
	challenge.append(176);
	challenge.append(187);
	challenge.append(93);
	challenge.append(101);
	challenge.append(38);
	challenge.append(184);
	challenge.append(202);
	challenge.append(3);
	challenge.append(56);
	challenge.append(11);
	challenge.append(130);
	challenge.append(162);
	challenge.append(130);
	challenge.append(131);
	challenge.append(86);
	challenge.append(47);
	challenge.append(152);
	challenge.append(246);
	challenge.append(241);
	challenge.append(74);
	challenge.append(34);
	challenge.append(152);
	challenge.append(5);
	challenge.append(36);
	challenge.append(99);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(65);
	client_data_json.append(76);
	client_data_json.append(70);
	client_data_json.append(69);
	client_data_json.append(121);
	client_data_json.append(81);
	client_data_json.append(80);
	client_data_json.append(69);
	client_data_json.append(50);
	client_data_json.append(98);
	client_data_json.append(67);
	client_data_json.append(55);
	client_data_json.append(88);
	client_data_json.append(87);
	client_data_json.append(85);
	client_data_json.append(109);
	client_data_json.append(117);
	client_data_json.append(77);
	client_data_json.append(111);
	client_data_json.append(68);
	client_data_json.append(79);
	client_data_json.append(65);
	client_data_json.append(117);
	client_data_json.append(67);
	client_data_json.append(111);
	client_data_json.append(111);
	client_data_json.append(75);
	client_data_json.append(68);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(45);
	client_data_json.append(89);
	client_data_json.append(57);
	client_data_json.append(118);
	client_data_json.append(70);
	client_data_json.append(75);
	client_data_json.append(73);
	client_data_json.append(112);
	client_data_json.append(103);
	client_data_json.append(70);
	client_data_json.append(74);
	client_data_json.append(71);
	client_data_json.append(77);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(104);
	client_data_json.append(116);
	client_data_json.append(116);
	client_data_json.append(112);
	client_data_json.append(115);
	client_data_json.append(58);
	client_data_json.append(47);
	client_data_json.append(47);
	client_data_json.append(99);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(114);
	client_data_json.append(45);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(116);
	client_data_json.append(45);
	client_data_json.append(116);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(99);
	client_data_json.append(101);
	client_data_json.append(45);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(45);
	client_data_json.append(49);
	client_data_json.append(57);
	client_data_json.append(53);
	client_data_json.append(45);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(100);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(105);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(45);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(115);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(97);
	client_data_json.append(116);
	client_data_json.append(105);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(45);
	client_data_json.append(57);
	client_data_json.append(55);
	client_data_json.append(54);
	client_data_json.append(54);
	client_data_json.append(57);
	client_data_json.append(55);
	client_data_json.append(46);
	client_data_json.append(112);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(118);
	client_data_json.append(105);
	client_data_json.append(101);
	client_data_json.append(119);
	client_data_json.append(46);
	client_data_json.append(99);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(100);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(103);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_invoke_0() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    12199958427972853078342900924373082655716152998831359676272227347648944852471, 
	    40838650441616864252057946687346584368660292489182225806979362323951322937810
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 4224912636517746297930360738386846214394232358661750834726272476578302034581;
	let s: u256 = 114133872056729296473578296149289564274974794137806170048811309580668266750342;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(3);
	challenge.append(25);
	challenge.append(108);
	challenge.append(60);
	challenge.append(160);
	challenge.append(117);
	challenge.append(115);
	challenge.append(155);
	challenge.append(120);
	challenge.append(71);
	challenge.append(153);
	challenge.append(82);
	challenge.append(171);
	challenge.append(151);
	challenge.append(13);
	challenge.append(61);
	challenge.append(102);
	challenge.append(34);
	challenge.append(120);
	challenge.append(7);
	challenge.append(145);
	challenge.append(84);
	challenge.append(57);
	challenge.append(247);
	challenge.append(167);
	challenge.append(0);
	challenge.append(85);
	challenge.append(96);
	challenge.append(13);
	challenge.append(69);
	challenge.append(184);
	challenge.append(241);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(65);
	client_data_json.append(120);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(80);
	client_data_json.append(75);
	client_data_json.append(66);
	client_data_json.append(49);
	client_data_json.append(99);
	client_data_json.append(53);
	client_data_json.append(116);
	client_data_json.append(52);
	client_data_json.append(82);
	client_data_json.append(53);
	client_data_json.append(108);
	client_data_json.append(83);
	client_data_json.append(113);
	client_data_json.append(53);
	client_data_json.append(99);
	client_data_json.append(78);
	client_data_json.append(80);
	client_data_json.append(87);
	client_data_json.append(89);
	client_data_json.append(105);
	client_data_json.append(101);
	client_data_json.append(65);
	client_data_json.append(101);
	client_data_json.append(82);
	client_data_json.append(86);
	client_data_json.append(68);
	client_data_json.append(110);
	client_data_json.append(51);
	client_data_json.append(112);
	client_data_json.append(119);
	client_data_json.append(66);
	client_data_json.append(86);
	client_data_json.append(89);
	client_data_json.append(65);
	client_data_json.append(49);
	client_data_json.append(70);
	client_data_json.append(117);
	client_data_json.append(80);
	client_data_json.append(69);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(104);
	client_data_json.append(116);
	client_data_json.append(116);
	client_data_json.append(112);
	client_data_json.append(115);
	client_data_json.append(58);
	client_data_json.append(47);
	client_data_json.append(47);
	client_data_json.append(99);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(114);
	client_data_json.append(46);
	client_data_json.append(99);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(100);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(103);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(29);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_0() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    75266041958400780988427003710812613770492419376852615180730775426142825242041, 
	    51812899056103437319463048324281283087014570647746383785776974726675103625857
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 7897956041147487571159452372142201940161454942011588179010013018038526294722;
	let s: u256 = 37315132256855717448298135274468315563180523064164849003786023224123224556276;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(104);
	client_data_json.append(116);
	client_data_json.append(116);
	client_data_json.append(112);
	client_data_json.append(115);
	client_data_json.append(58);
	client_data_json.append(47);
	client_data_json.append(47);
	client_data_json.append(99);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(114);
	client_data_json.append(46);
	client_data_json.append(99);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(100);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(103);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_1() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    27084614599942790084163708717015805697543296396030142601141232886954465293142, 
	    18417571193620470626305195873812764839433421702811471057964990079083182870386
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 12845026495108008081712724019612632989027661943747548034858768723740778339076;
	let s: u256 = 27654614995373085875702691792821598434294570565546556829682898305978805404136;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_2() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    24292136483717709380183351573789514920242567464256313377998805483277506754606, 
	    85719815282362601940805959631412897851171506347425438796521504212563351617761
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 44980414820891916271467791128669146254575402470692835683669724267825172769414;
	let s: u256 = 888176604117207894546883109312403445854704687626528172359712493013261825080;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_3() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    115416207886660007416574524085554747844501853831487332838365835650895202830686, 
	    98242527160044441667439013384915365911517030151920407691570530347382766227799
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 48792632357814506290943569724651643020241686394330328198903872663994366331065;
	let s: u256 = 71765628714356583634318855683102182341981843175539429825578274673688766863967;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_4() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    29420324587992885671705753066513142031161948705541222311358203247692663337673, 
	    112060744786581991076439264758855056353011353259467133350258962221899570756406
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 20123805707889657631864946875415612863528429368879986853697590696235247324801;
	let s: u256 = 51846249664152478775403903221256343793542310917080402513136533635258586161266;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_5() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    58452404938794779702463982079742221096212429796646692255923889267588359968324, 
	    14649732119491385338725673808817543467513097914638861997003676240956589948594
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 93593266759857563812582275073918755551265760223898708985660483844016394482850;
	let s: u256 = 39449368524309255639878107104663894891328039310992597445934255480088116691964;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

