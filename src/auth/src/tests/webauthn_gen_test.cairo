// This file is script-generated.
// Don't modify it manually!
// See test_gen_scripts/auth/webauthn_auth.py for details
use webauthn_auth::webauthn::verify;
use array::ArrayTrait;
use webauthn_auth::types::PublicKey;
use webauthn_auth::errors::AuthnErrorIntoFelt252;
use core::option::OptionTrait;
use core::result::ResultTrait;
use starknet::secp256r1::Secp256Trait;
use starknet::secp256r1::Secp256r1Point;

#[test]
#[available_gas(200000000000)]
fn test_base_0() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    85361148225729824017625108732123897247053575672172763810522989717862412662042, 
	    34990362585894687818855246831758567645528911684717374214517047635026995605
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 75529856265189085717597548073817449083775048352765043385708233156408636830191;
	let s: u256 = 82845566382340822813767408921328436369277471334456847186275564885436721176380;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(0);
	challenge.append(177);
	challenge.append(68);
	challenge.append(201);
	challenge.append(3);
	challenge.append(196);
	challenge.append(217);
	challenge.append(176);
	challenge.append(187);
	challenge.append(93);
	challenge.append(101);
	challenge.append(38);
	challenge.append(184);
	challenge.append(202);
	challenge.append(3);
	challenge.append(56);
	challenge.append(11);
	challenge.append(130);
	challenge.append(162);
	challenge.append(130);
	challenge.append(131);
	challenge.append(86);
	challenge.append(47);
	challenge.append(152);
	challenge.append(246);
	challenge.append(241);
	challenge.append(74);
	challenge.append(34);
	challenge.append(152);
	challenge.append(5);
	challenge.append(36);
	challenge.append(99);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(65);
	client_data_json.append(76);
	client_data_json.append(70);
	client_data_json.append(69);
	client_data_json.append(121);
	client_data_json.append(81);
	client_data_json.append(80);
	client_data_json.append(69);
	client_data_json.append(50);
	client_data_json.append(98);
	client_data_json.append(67);
	client_data_json.append(55);
	client_data_json.append(88);
	client_data_json.append(87);
	client_data_json.append(85);
	client_data_json.append(109);
	client_data_json.append(117);
	client_data_json.append(77);
	client_data_json.append(111);
	client_data_json.append(68);
	client_data_json.append(79);
	client_data_json.append(65);
	client_data_json.append(117);
	client_data_json.append(67);
	client_data_json.append(111);
	client_data_json.append(111);
	client_data_json.append(75);
	client_data_json.append(68);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(45);
	client_data_json.append(89);
	client_data_json.append(57);
	client_data_json.append(118);
	client_data_json.append(70);
	client_data_json.append(75);
	client_data_json.append(73);
	client_data_json.append(112);
	client_data_json.append(103);
	client_data_json.append(70);
	client_data_json.append(74);
	client_data_json.append(71);
	client_data_json.append(77);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(104);
	client_data_json.append(116);
	client_data_json.append(116);
	client_data_json.append(112);
	client_data_json.append(115);
	client_data_json.append(58);
	client_data_json.append(47);
	client_data_json.append(47);
	client_data_json.append(99);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(114);
	client_data_json.append(45);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(116);
	client_data_json.append(45);
	client_data_json.append(116);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(99);
	client_data_json.append(101);
	client_data_json.append(45);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(45);
	client_data_json.append(49);
	client_data_json.append(57);
	client_data_json.append(53);
	client_data_json.append(45);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(100);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(105);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(45);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(115);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(97);
	client_data_json.append(116);
	client_data_json.append(105);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(45);
	client_data_json.append(57);
	client_data_json.append(55);
	client_data_json.append(54);
	client_data_json.append(54);
	client_data_json.append(57);
	client_data_json.append(55);
	client_data_json.append(46);
	client_data_json.append(112);
	client_data_json.append(114);
	client_data_json.append(101);
	client_data_json.append(118);
	client_data_json.append(105);
	client_data_json.append(101);
	client_data_json.append(119);
	client_data_json.append(46);
	client_data_json.append(99);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(100);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(103);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_invoke_0() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    12199958427972853078342900924373082655716152998831359676272227347648944852471, 
	    40838650441616864252057946687346584368660292489182225806979362323951322937810
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 4224912636517746297930360738386846214394232358661750834726272476578302034581;
	let s: u256 = 114133872056729296473578296149289564274974794137806170048811309580668266750342;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(3);
	challenge.append(25);
	challenge.append(108);
	challenge.append(60);
	challenge.append(160);
	challenge.append(117);
	challenge.append(115);
	challenge.append(155);
	challenge.append(120);
	challenge.append(71);
	challenge.append(153);
	challenge.append(82);
	challenge.append(171);
	challenge.append(151);
	challenge.append(13);
	challenge.append(61);
	challenge.append(102);
	challenge.append(34);
	challenge.append(120);
	challenge.append(7);
	challenge.append(145);
	challenge.append(84);
	challenge.append(57);
	challenge.append(247);
	challenge.append(167);
	challenge.append(0);
	challenge.append(85);
	challenge.append(96);
	challenge.append(13);
	challenge.append(69);
	challenge.append(184);
	challenge.append(241);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(65);
	client_data_json.append(120);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(80);
	client_data_json.append(75);
	client_data_json.append(66);
	client_data_json.append(49);
	client_data_json.append(99);
	client_data_json.append(53);
	client_data_json.append(116);
	client_data_json.append(52);
	client_data_json.append(82);
	client_data_json.append(53);
	client_data_json.append(108);
	client_data_json.append(83);
	client_data_json.append(113);
	client_data_json.append(53);
	client_data_json.append(99);
	client_data_json.append(78);
	client_data_json.append(80);
	client_data_json.append(87);
	client_data_json.append(89);
	client_data_json.append(105);
	client_data_json.append(101);
	client_data_json.append(65);
	client_data_json.append(101);
	client_data_json.append(82);
	client_data_json.append(86);
	client_data_json.append(68);
	client_data_json.append(110);
	client_data_json.append(51);
	client_data_json.append(112);
	client_data_json.append(119);
	client_data_json.append(66);
	client_data_json.append(86);
	client_data_json.append(89);
	client_data_json.append(65);
	client_data_json.append(49);
	client_data_json.append(70);
	client_data_json.append(117);
	client_data_json.append(80);
	client_data_json.append(69);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(104);
	client_data_json.append(116);
	client_data_json.append(116);
	client_data_json.append(112);
	client_data_json.append(115);
	client_data_json.append(58);
	client_data_json.append(47);
	client_data_json.append(47);
	client_data_json.append(99);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(114);
	client_data_json.append(46);
	client_data_json.append(99);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(100);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(103);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(29);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_0() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    109053253944037847942085021089367579030068666266521198531400918539717181280776, 
	    74105053325985677543915657485828300201252551619881337151281720970844684308904
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 12610860878844343848596443191772552827860360262122583401284581290020693898003;
	let s: u256 = 69466407810599046642599073107716671766435754869378287390652388913678305147269;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(104);
	client_data_json.append(116);
	client_data_json.append(116);
	client_data_json.append(112);
	client_data_json.append(115);
	client_data_json.append(58);
	client_data_json.append(47);
	client_data_json.append(47);
	client_data_json.append(99);
	client_data_json.append(111);
	client_data_json.append(110);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(114);
	client_data_json.append(46);
	client_data_json.append(99);
	client_data_json.append(97);
	client_data_json.append(114);
	client_data_json.append(116);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(100);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(103);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_1() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    68908765579153952117399677317891738739485476784560818200593564593268900686323, 
	    62337584232958020554475330826838542205607548436514465548907100100723432774606
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 46172758069869026708701256691005349857190853104692958253383347319634983510708;
	let s: u256 = 63948688807237555033931684835790561179149430425119014188455150993921924270665;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_2() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    89147718326752958690729436359248523515802675241241623766686390710908302859343, 
	    42388669578645394076851734990471058912471655506355364811904852966404058106329
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 58276262939255192887620609859969674373360826065754683870657904539430705662502;
	let s: u256 = 77398674004606062167528437428180766488665169674809518095728476016828434510783;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_3() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    81671582883493483045192999687560192736166591183790929398658885579261223200849, 
	    77769414165682941184822339177545295988242007754262060830507623651571442775870
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 16010520542692948882248879505943968720417930268088596730460097741447536136007;
	let s: u256 = 26672735332920733480258955800801806765889911121090073660739817900410373052081;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_4() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    65239530510386266927328441617379321420733945961450686835965022575812134739178, 
	    59546631881118406240971365629579479186374627151274270833598932928924601695627
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 18797538954563673686606646014287157466574240530073251814478826777397715203535;
	let s: u256 = 69157506779548707559052350431487711824656207541201168512559795823444334063831;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

#[test]
#[available_gas(200000000000)]
fn test_signer_5() {
	let public_key_pt: Result<Option<Secp256r1Point>> = Secp256Trait::secp256_ec_new_syscall(
	    83001465024789762877199274655918466327664242141715533278973168988491314274247, 
	    35832564476788383973287509060725602071547460743443196384831414326612043613717
	);
	let public_key_pt: Secp256r1Point = public_key_pt.unwrap().unwrap();
	let r: u256 = 26129080567250914979263720378697090720812154043133489632890934475039755007247;
	let s: u256 = 64653288642775648201071812156376624345627449012242719596781758361468255892512;
	let type_offset = 9_usize;
	let challenge_offset = 36;
	let mut challenge = ArrayTrait::<u8>::new();
	challenge.append(6);
	challenge.append(58);
	challenge.append(153);
	challenge.append(157);
	challenge.append(39);
	challenge.append(33);
	challenge.append(87);
	challenge.append(210);
	challenge.append(184);
	challenge.append(177);
	challenge.append(106);
	challenge.append(213);
	challenge.append(136);
	challenge.append(44);
	challenge.append(177);
	challenge.append(9);
	challenge.append(230);
	challenge.append(56);
	challenge.append(158);
	challenge.append(56);
	challenge.append(180);
	challenge.append(165);
	challenge.append(220);
	challenge.append(108);
	challenge.append(105);
	challenge.append(207);
	challenge.append(246);
	challenge.append(245);
	challenge.append(21);
	challenge.append(226);
	challenge.append(30);
	challenge.append(31);
	
	let origin_offset = 91;
	let mut origin = ArrayTrait::<u8>::new();
	origin.append(0x68);
	origin.append(0x74);
	origin.append(0x74);
	origin.append(0x70);
	origin.append(0x73);
	origin.append(0x3A);
	origin.append(0x2F);
	origin.append(0x2F);
	origin.append(0x63);
	origin.append(0x6F);
	origin.append(0x6E);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x6F);
	origin.append(0x6C);
	origin.append(0x6C);
	origin.append(0x65);
	origin.append(0x72);
	origin.append(0x2D);
	origin.append(0x65);
	origin.append(0x31);
	origin.append(0x33);
	origin.append(0x70);
	origin.append(0x74);
	origin.append(0x39);
	origin.append(0x77);
	origin.append(0x77);
	origin.append(0x76);
	origin.append(0x2E);
	origin.append(0x70);
	origin.append(0x72);
	origin.append(0x65);
	origin.append(0x76);
	origin.append(0x69);
	origin.append(0x65);
	origin.append(0x77);
	origin.append(0x2E);
	origin.append(0x63);
	origin.append(0x61);
	origin.append(0x72);
	origin.append(0x74);
	origin.append(0x72);
	origin.append(0x69);
	origin.append(0x64);
	origin.append(0x67);
	origin.append(0x65);
	origin.append(0x2E);
	origin.append(0x67);
	origin.append(0x67);
	let mut client_data_json = ArrayTrait::<u8>::new();
	client_data_json.append(123);
	client_data_json.append(34);
	client_data_json.append(116);
	client_data_json.append(121);
	client_data_json.append(112);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(119);
	client_data_json.append(101);
	client_data_json.append(98);
	client_data_json.append(97);
	client_data_json.append(117);
	client_data_json.append(116);
	client_data_json.append(104);
	client_data_json.append(110);
	client_data_json.append(46);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(116);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(108);
	client_data_json.append(101);
	client_data_json.append(110);
	client_data_json.append(103);
	client_data_json.append(101);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(66);
	client_data_json.append(106);
	client_data_json.append(113);
	client_data_json.append(90);
	client_data_json.append(110);
	client_data_json.append(83);
	client_data_json.append(99);
	client_data_json.append(104);
	client_data_json.append(86);
	client_data_json.append(57);
	client_data_json.append(75);
	client_data_json.append(52);
	client_data_json.append(115);
	client_data_json.append(87);
	client_data_json.append(114);
	client_data_json.append(86);
	client_data_json.append(105);
	client_data_json.append(67);
	client_data_json.append(121);
	client_data_json.append(120);
	client_data_json.append(67);
	client_data_json.append(101);
	client_data_json.append(89);
	client_data_json.append(52);
	client_data_json.append(110);
	client_data_json.append(106);
	client_data_json.append(105);
	client_data_json.append(48);
	client_data_json.append(112);
	client_data_json.append(100);
	client_data_json.append(120);
	client_data_json.append(115);
	client_data_json.append(97);
	client_data_json.append(99);
	client_data_json.append(95);
	client_data_json.append(50);
	client_data_json.append(57);
	client_data_json.append(82);
	client_data_json.append(88);
	client_data_json.append(105);
	client_data_json.append(72);
	client_data_json.append(104);
	client_data_json.append(56);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(111);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(34);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(97);
	client_data_json.append(34);
	client_data_json.append(44);
	client_data_json.append(34);
	client_data_json.append(99);
	client_data_json.append(114);
	client_data_json.append(111);
	client_data_json.append(115);
	client_data_json.append(115);
	client_data_json.append(79);
	client_data_json.append(114);
	client_data_json.append(105);
	client_data_json.append(103);
	client_data_json.append(105);
	client_data_json.append(110);
	client_data_json.append(34);
	client_data_json.append(58);
	client_data_json.append(102);
	client_data_json.append(97);
	client_data_json.append(108);
	client_data_json.append(115);
	client_data_json.append(101);
	client_data_json.append(125);
	
	let mut authenticator_data = ArrayTrait::<u8>::new();
	authenticator_data.append(32);
	authenticator_data.append(169);
	authenticator_data.append(126);
	authenticator_data.append(195);
	authenticator_data.append(248);
	authenticator_data.append(239);
	authenticator_data.append(188);
	authenticator_data.append(42);
	authenticator_data.append(202);
	authenticator_data.append(12);
	authenticator_data.append(247);
	authenticator_data.append(202);
	authenticator_data.append(187);
	authenticator_data.append(66);
	authenticator_data.append(11);
	authenticator_data.append(74);
	authenticator_data.append(9);
	authenticator_data.append(208);
	authenticator_data.append(174);
	authenticator_data.append(201);
	authenticator_data.append(144);
	authenticator_data.append(84);
	authenticator_data.append(102);
	authenticator_data.append(201);
	authenticator_data.append(173);
	authenticator_data.append(247);
	authenticator_data.append(149);
	authenticator_data.append(132);
	authenticator_data.append(250);
	authenticator_data.append(117);
	authenticator_data.append(254);
	authenticator_data.append(211);
	authenticator_data.append(5);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	authenticator_data.append(0);
	
	let verify_result = verify(
	    public_key_pt,
	    r,
	    s,
	    type_offset,
	    challenge_offset,
	    origin_offset,
	    client_data_json,
	    challenge,
	    origin,
	    authenticator_data
	);
	match verify_result {
	    Result::Ok => (),
	    Result::Err(e) => assert(false, AuthnErrorIntoFelt252::into(e))
	}
	
}

